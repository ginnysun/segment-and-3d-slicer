import os
import config
from totalsegmentator.python_api import totalsegmentator


def runTotSegAndReturnSkipped(input_file_path, dicom_folders):
    print(f"run totseg on: {input_file_path}")
    skipped_folders = []
    for dicom in dicom_folders:
        output_filename = os.path.basename(dicom) + "_seg.nii"
        output_filepath = os.path.join(input_file_path, output_filename)

        # Check if output file already exists
        if os.path.isfile(output_filepath):
            print(f"{output_filename} already exists in {input_file_path}. Skipping...")
            continue
        try:
            totalsegmentator(os.path.join(input_file_path, dicom), output_filepath, ml=True)
        except FileNotFoundError as e:
            print(f"skipping {item['series']} due to error: {e}")
            skipped_folders.append((patientID, item['series']))
            continue
    return skipped_folders


if __name__ == '__main__':
    mainDirectory = config.mainDirectory
    print(f"the root folder is: {mainDirectory}")

    env = input("set correct python api environment: ")
    os.environ["CUDA_VISIBLE_DEVICES"] = env

    # series list generated by createConfig.py
    seriesList = config.seriesList
    skipped = []
    for item in seriesList:
        patientID = item['patient']
        subFolderPath = os.path.join(mainDirectory, patientID)
        # Check if the subfolder is a directory
        if os.path.isdir(subFolderPath):
            # Call the runTotSeg function for each subfolder
            skippedFolders = runTotSegAndReturnSkipped(subFolderPath, item['series'])
            skipped.extend(skippedFolders)
    print(f"skipped directories: {skipped}")
    print("Done with this batch")
